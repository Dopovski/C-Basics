#include <iostream>
#include <cmath>

class Expr {
public:
    // Метод за изчисляване на S1
    static double S1(double x, int n) {
        double sum = 0.0;
        for (int i = 0; i <= n; i++) {
            sum += pow(x, i) / factorial(i);
        }
        return sum;
    }

    // Метод за изчисляване на S2
    static double S2(double x, int n) {
        double sum = 0.0;
        for (int i = 0; i <= n; i++) {
            sum += pow(-1, i) * pow(x, 2 * i) / factorial(2 * i);
        }
        return sum;
    }

    // Метод за изчисляване на S3
    static double S3(double x, int n) {
        double sum = 0.0;
        for (int i = 0; i <= n; i++) {
            sum += pow(-1, i) * pow(x, 2 * i + 1) / factorial(2 * i + 1);
        }
        return sum;
    }

private:
    // Функция за изчисляване на факториела
    static unsigned long long factorial(int n) {
        if (n == 0) return 1;
        unsigned long long result = 1;
        for (int i = 1; i <= n; i++) {
            result *= i;
        }
        return result;
    }
};

int main() {
    double x;
    int n;

    std::cout << "Въведете стойност за x (-1 <= x <= 1): ";
    std::cin >> x;

    if (x < -1 || x > 1) {
        std::cerr << "Стойността на x трябва да бъде в интервала [-1, 1]." << std::endl;
        return 1;
    }

    std::cout << "Въведете n (n >= 0): ";
    std::cin >> n;

    if (n < 0) {
        std::cerr << "Стойността на n трябва да бъде >= 0." << std::endl;
        return 1;
    }

    std::cout << "S1 = " << Expr::S1(x, n) << std::endl;
    std::cout << "S2 = " << Expr::S2(x, n) << std::endl;
    std::cout << "S3 = " << Expr::S3(x, n) << std::endl;

    return 0;
}
